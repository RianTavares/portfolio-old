{"version":3,"file":"static/js/393.527de217.chunk.js","mappings":"yMAmCA,EAhCiB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACZC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,iBAAKC,UAAU,OAAf,WACE,gBAAKC,IAAKJ,EAAKK,KAAKC,IAAKC,IAAKP,EAAKK,KAAKG,gBAAiBL,UAAU,iBAEnE,gBAAKA,UAAU,uBAAf,UACE,iBAAKA,UAAU,aAAf,WACE,cAAGA,UAAU,cAAb,SAA4BH,EAAKS,QAEjC,gBAAKN,UAAU,uBAAf,SACGH,EAAKU,KAAKC,KAAI,SAACC,GAAD,OACb,gBAAKT,UAAU,YAAf,UACE,mBAAQA,UAAU,iBAAlB,SAAoCS,EAAKC,YADXD,EAAKE,UAMzC,mBAAQC,KAAK,SAASZ,UAAU,eAAea,QAAS,kBApB3CC,EAoB6DjB,EAAKiB,UAnBrFhB,EAAS,YAAD,OAAagB,IADH,IAACA,GAoBb,SACGjB,EAAKkB,2BCiBlB,EA1Ce,SAACC,GACd,IACEhB,EACEgB,EADFhB,UAAWiB,EACTD,EADSC,MAAOJ,EAChBG,EADgBH,QAGpB,MAAa,SAFTG,EADyBJ,MAKzB,mBACEA,KAAK,SACLZ,UAAWA,EACXiB,OAAK,kBACAA,GADA,IAEHC,QAAS,OACTC,MAAO,EACPC,MAAO,GACPC,OAAQ,MAEVR,QAASA,EAVX,mBAkBF,mBACED,KAAK,SACLZ,UAAWA,EACXiB,OAAK,kBACAA,GADA,IAEHC,QAAS,OACTI,KAAM,EACNF,MAAO,GACPC,OAAQ,MAEVR,QAASA,EAVX,mBC8CJ,EA/DmB,SAACG,GAClB,IAAQnB,EAASmB,EAATnB,KAEF0B,EAAW,CACfvB,UAAW,QACXwB,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,aAAc,EACdC,QAAQ,EACRC,WAAW,SAAC,EAAD,CAAQnB,KAAK,SACxBoB,WAAW,SAAC,EAAD,CAAQpB,KAAK,SACxBqB,YAAY,EACZC,cAAe,OACfC,cAAc,EACdC,WAAY,CACV,CACEC,WAAY,KACZd,SAAU,CACRI,aAAc,EACdC,eAAgB,EAChBC,aAAc,EACdC,QAAQ,IAGZ,CACEO,WAAY,IACZd,SAAU,CACRI,aAAc,EACdC,eAAgB,EAChBC,aAAc,EACdC,QAAQ,IAGZ,CACEO,WAAY,IACZd,SAAU,CACRI,aAAc,EACdC,eAAgB,EAChBC,aAAc,EACdI,YAAY,EACZC,cAAe,OACfJ,QAAQ,MAKhB,OACE,8BACGjC,EAAKyC,OAAS,IAEb,SAAC,KAAD,kBAAYf,GAAZ,aACK1B,EAAKW,KAAI,SAACC,GAAD,OACR,SAAC8B,EAAD,CAAuB1C,KAAMY,GAAfA,EAAKE","sources":["components/JobsSlide/components/JobCard/JobCard.jsx","components/JobsSlide/components/Arrows/Arrows.jsx","components/JobsSlide/JobsSlide.jsx"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst JobsCard = ({ data }) => {\n  const navigate = useNavigate();\n\n  const handleClick = (slug) => {\n    navigate(`/project/${slug}`);\n  };\n\n  return (\n    <div className=\"card\">\n      <img src={data.case.url} alt={data.case.alternativeText} className=\"card__image\" />\n\n      <div className=\"card__info-container\">\n        <div className=\"card__info\">\n          <p className=\"card__title\">{data.name}</p>\n\n          <div className=\"card__tags-container\">\n            {data.tags.map((item) => (\n              <div className=\"card__tag\" key={item.id}>\n                <strong className=\"card__tag-text\">{item.tag_name}</strong>\n              </div>\n            ))}\n          </div>\n\n          <button type=\"button\" className=\"card__button\" onClick={() => handleClick(data.slug)}>\n            {data.see_more_button}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default JobsCard;\n","import React from 'react';\n\nconst Arrows = (props) => {\n  const {\n    className, style, onClick, type,\n  } = props;\n\n  if (type === 'next') {\n    return (\n      <button\n        type=\"button\"\n        className={className}\n        style={{\n          ...style,\n          display: 'flex',\n          right: 0,\n          width: 50,\n          height: 100,\n        }}\n        onClick={onClick}\n      >\n        seta\n      </button>\n    );\n  }\n\n  return (\n    <button\n      type=\"button\"\n      className={className}\n      style={{\n        ...style,\n        display: 'flex',\n        left: 0,\n        width: 50,\n        height: 100,\n      }}\n      onClick={onClick}\n    >\n      seta\n    </button>\n  );\n};\n\nexport default Arrows;\n","/* eslint-disable react/jsx-no-useless-fragment */\nimport React from 'react';\nimport Slider from 'react-slick';\n\nimport JobCard from './components/JobCard';\nimport Arrows from './components/Arrows';\n\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nconst JobsSlider = (props) => {\n  const { data } = props;\n\n  const settings = {\n    className: 'slide',\n    dots: false,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 5,\n    slidesToScroll: 1,\n    initialSlide: 1,\n    arrows: true,\n    nextArrow: <Arrows type=\"next\" />,\n    prevArrow: <Arrows type=\"prev\" />,\n    centerMode: false,\n    centerPadding: '50px',\n    pauseOnHover: true,\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 1,\n          initialSlide: 0,\n          arrows: false,\n        },\n      },\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 1,\n          initialSlide: 0,\n          arrows: false,\n        },\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          initialSlide: 0,\n          centerMode: true,\n          centerPadding: '30px',\n          arrows: false,\n        },\n      },\n    ],\n  };\n  return (\n    <>\n      {data.length > 0\n        && (\n        <Slider {...settings}>\n            {data.map((item) => (\n              <JobCard key={item.id} data={item} />\n            ))}\n        </Slider>\n        )}\n    </>\n  );\n};\n\nexport default JobsSlider;\n"],"names":["data","navigate","useNavigate","className","src","case","url","alt","alternativeText","name","tags","map","item","tag_name","id","type","onClick","slug","see_more_button","props","style","display","right","width","height","left","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","arrows","nextArrow","prevArrow","centerMode","centerPadding","pauseOnHover","responsive","breakpoint","length","JobCard"],"sourceRoot":""}